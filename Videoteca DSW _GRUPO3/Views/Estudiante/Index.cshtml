@model List<Videoteca_DSW__GRUPO3.Models.Estudiante>
@{
    ViewData["Title"] = "Gestionar Usuarios";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            overflow-x: hidden;
            background-color: #f4f4f4;
            /*display: flex;
                    justify-content: center;*/
        }

        .container {
            width: 100%;
            max-width: 1000px;
            margin: 2rem auto;
            padding: 0 20px;
        }

        .main-content {
            width: 100%;
            padding: 30px;
            background-color: #ffffff;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .users-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding: 0 20px;
        }

            .users-header h1 {
                font-size: 2em;
                color: #2c3e50;
            }

        /*Boton de return to home*/
        .home-button {
            padding: 10px;
            background-color: #34495e;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
            margin-right: 15px;
        }

            .home-button:hover {
                background-color: #2c3e50;
                transform: translateY(-2px);
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                color: white;
            }

        .header-left {
            display: flex;
            align-items: center;
        }

        .search-box {
            display: flex;
            gap: 10px;
        }

        .search-input {
            padding: 12px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            width: 300px;
            font-size: 1em;
            transition: border-color 0.3s;
        }

            .search-input:focus {
                border-color: #3498db;
                outline: none;
            }

        .search-button {
            padding: 12px 24px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-weight: 500;
        }

            .search-button:hover {
                background-color: #2980b9;
            }

        .users-list {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
        }

        .user-item {
            display: flex;
            align-items: center;
            padding: 20px;
            border-bottom: 1px solid #eee;
            transition: transform 0.2s, box-shadow 0.2s;
            margin-bottom: 10px;
            border-radius: 8px;
        }

            .user-item:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

        .user-icon {
            width: 50px;
            height: 50px;
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-right: 20px;
            background-color: #f8f9fa;
        }

            .user-icon i {
                font-size: 24px;
            }

        .icon-enabled {
            color: #2ecc71;
        }

        .icon-disabled {
            color: #e74c3c;
        }

        .user-info {
            flex-grow: 1;
            padding: 0 15px;
        }

        .user-name {
            font-size: 1.1em;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 5px;
        }

        .user-email {
            color: #7f8c8d;
            font-size: 0.9em;
        }

        .user-status {
            font-size: 0.9em;
            padding: 4px 8px;
            border-radius: 4px;
            margin-top: 5px;
            display: inline-block;
        }

        .status-enabled {
            background-color: #e8f5e9;
            color: #2ecc71;
        }

        .status-disabled {
            background-color: #ffebee;
            color: #e74c3c;
        }

        .user-actions {
            display: flex;
            gap: 15px;
        }

        .action-button {
            padding: 10px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .edit-button {
            background-color: #3498db;
            color: white;
        }

        .toggle-button {
            background-color: #95a5a6;
            color: white;
        }

        .action-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
        }

        /* Estilos para el modal de confirmación */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            padding: 30px;
            border-radius: 15px;
            width: 90%;
            max-width: 400px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .modal-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }

        .modal-button {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s;
        }

        .confirm-button {
            background-color: #e74c3c;
            color: white;
        }

        .cancel-button {
            background-color: #95a5a6;
            color: white;
        }

        .modal-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="main-content">
            <div class="users-header">
                <div class="header-left">
                    <a href="@Url.Action("AdminDashboard", "Home")" class="home-button">
                        <i class="fas fa-home"></i>
                    </a>
                    <h1>Gestión de Estudiantes</h1>
                </div>
                @using (Html.BeginForm("Index", "Estudiante", FormMethod.Get))
                {
                    <div class="search-box">
                        <input type="text" name="searchString" class="search-input"
                               placeholder="Buscar estudiante..."
                               value="@Context.Request.Query["searchString"]">
                        <button type="submit" class="search-button">
                            <i class="fas fa-search"></i>
                            Buscar
                        </button>
                    </div>
                }
            </div>

            <div class="users-list">
                @if (Model.Any())
                {
                    @foreach (var estudiante in Model)
                    {
                        <div class="user-item">
                            <div class="user-icon">
                                <i class="fas fa-user @(estudiante.estado == "Habilitado" ? "icon-enabled" : "icon-disabled")"></i>
                            </div>
                            <div class="user-info">
                                <div class="user-name">@estudiante.nombre</div>
                                <div class="user-email">@estudiante.correo</div>
                                <div class="user-status @(estudiante.estado == "Habilitado" ? "status-enabled" : "status-disabled")">
                                    @estudiante.estado
                                </div>
                            </div>
                            <div class="user-actions">
                                <button class="action-button edit-button" onclick="location.href='@Url.Action("Edit", "Estudiante", new { id = estudiante.id_estudiante })'">
                                    <i class="fas fa-edit"></i>
                                    Editar
                                </button>
                                <button class="action-button toggle-button" onclick="showConfirmModal(@estudiante.id_estudiante, '@estudiante.estado')">
                                    <i class="fas @(estudiante.estado == "Habilitado" ? "fa-user-slash" : "fa-user-check")"></i>
                                    @(estudiante.estado == "Habilitado" ? "Deshabilitar" : "Habilitar")
                                </button>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-users fa-3x mb-3"></i>
                        <p>No hay estudiantes registrados</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Modal de confirmación -->
    <div id="confirmModal" class="modal">
        <div class="modal-content">
            <h2 id="modalTitle" style="margin-bottom: 20px; color: #2c3e50;"></h2>
            <p id="modalMessage" style="color: #7f8c8d; margin-bottom: 20px;"></p>
            <div class="modal-buttons">
                <button class="modal-button cancel-button" onclick="hideConfirmModal()">Cancelar</button>
                <button id="confirmButton" class="modal-button confirm-button">Confirmar</button>
            </div>
        </div>
    </div>

    <script>
        let currentStudentId = null;

        function showConfirmModal(studentId, currentStatus) {
            currentStudentId = studentId;
            const modal = document.getElementById('confirmModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalMessage = document.getElementById('modalMessage');
            const confirmButton = document.getElementById('confirmButton');

            const action = currentStatus === 'Habilitado' ? 'deshabilitar' : 'habilitar';
            modalTitle.textContent = `Confirmar ${action}`;
            modalMessage.textContent = `¿Estás seguro de que deseas ${action} a este estudiante?`;

            modal.style.display = 'flex';

            confirmButton.onclick = function () {
                location.href = '@Url.Action("ToggleStatus", "Estudiante")?id=' + studentId;
            };
        }

        function hideConfirmModal() {
            const modal = document.getElementById('confirmModal');
            modal.style.display = 'none';
            currentStudentId = null;
        }

        // Cerrar modal al hacer clic fuera de él
        window.onclick = function (event) {
            const modal = document.getElementById('confirmModal');
            if (event.target === modal) {
                hideConfirmModal();
            }
        }
    </script>
</body>
</html>